name: Coopwise CI
description: CI workflow for Coopwise project

on:
  push:
    branches: [main, 0G]
  
jobs:
  backend:
    name: Backend Tests & Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend_api
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install black pytest

      - name: Lint with Black
        run: black --check .

      - name: Create .env file
        run: |
          echo "ENV=dev" >> .env
          echo "PROJECT_NAME=Coopwise" >> .env
          echo "DATABASE_URL=sqlite+aiosqlite:///:memory:" >> .env
          echo "APP_SECRET_KEY=secret" >> .env
          echo "ALGORITHM=HS256" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "PAYSTACK_PUBLIC_KEY=test" >> .env
          echo "PAYSTACK_SECRET_KEY=test" >> .env
          echo "CASHRAMP_PUBKEY=test" >> .env
          echo "CASHRAMP_SECKEY=test" >> .env
          echo "GEMINI_API_KEY=test" >> .env
          echo "CLIENT_DOMAIN=http://localhost:3000" >> .env
          echo "DOMAIN=http://localhost:8000" >> .env
          echo "INVITE_CODE_PREFIX=XYZ" >> .env

      - name: Run tests with Pytest
        run: pytest

  frontend:
    name: Frontend Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.Js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm i

      - name: Lint with ESLint
        run: npx eslint . 
